name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: macos-latest
            build_type: Release
            enable_ui: on

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      if: runner.os == 'macOS'
      with:
        key: ${{ matrix.os }}-${{ matrix.enable_ui }}

    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Install Dependencies
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "macOS" ]] ; then
          brew update
          brew install ninja cmake ccache
        fi

    - name: Generating Makefiles
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "macOS" ]] ; then
          export enable_ccache=on
        else
          export enable_ccache=off
        fi

        curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --output skia.zip
        unzip skia.zip

        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DENABLE_UI=${{ matrix.enable_ui }} \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=./skia \
          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
          -DSKIA_LIBRARY=./skia/out/Release-x64/libskia.a

    - name: Compiling
      shell: bash
      run: |
        cd build && ninja

    - uses: actions/upload-artifact@v3
      with:
        name: aseprite
        path: |
          ${{ github.workspace }}/build/bin/data
          ${{ github.workspace }}/build/bin/aseprite
